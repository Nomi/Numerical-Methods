function CheckNM2Test2
%format long; %format short;
%% Check on BY_HAND-GENERATED Matrix with Eigenvalues 2 and 6 for various accuracies
disp('============================================================================================')
disp('||       TESTING: FOR SymmPosDef MATRIX WITH EIGENVALUES [2,6](generated by hand):        ||')
disp('============================================================================================')
%The elemets of the following Matrix A were gotten using the
%the function GenSymmPosDefWithEigs([1,2,3,4,5]) [check at the end of this
%program for more information]
A=[ 5.2,-1.6;
   -1.6, 2.8 ]
disp(['***When acceptable error for Inv Pow =0.01 and Pow Methods =',num2str(eps) ,' we get:******']);
NM2Test2(A,-1,0.01)

disp(['***When acceptable error for Inv Pow =',num2str(eps) ,' and Pow Methods =0.01 we get:******']);
NM2Test2(A,0.01,-1)

disp(['***When acceptable error for Inv Pow =0.0001 and Pow Methods =0.0001 we get:******']);
NM2Test2(A,0.0001,0.0001)

disp(['***When acceptable error for both Inv Pow and Pow Methods is set to ',num2str(eps) ,' (eps AKA the floating point precision), we get:******']);
NM2Test2(A,-1,-1)


%% Check on Matrix with Eigenvalues 1,2,3,4,5 for various accuracies
disp('============================================================================================')
disp('||              TESTING: FOR SymmPosDef MATRIX WITH EIGENVALUES [1,2,3,4,5]:              ||')
disp('============================================================================================')
%The elemets of the following Matrix A were gotten using the
%the function GenSymmPosDefWithEigs([1,2,3,4,5]) [check at the end of this
%program for more information]
A=[1.034141441880540  -0.050589544224512   0.137657181456017  -0.001025421848377  -0.107079179795288;
  -0.050589544224512   2.923660931928972   0.177236460127615  -0.025034291357546  -0.224424984692593;
   0.137657181456017   0.177236460127615   2.837653454681989   0.250062021829770   1.034618472814979;
  -0.001025421848377  -0.025034291357546   0.250062021829770   4.805518734222382   0.306104856052903;
  -0.107079179795288  -0.224424984692593   1.034618472814979   0.306104856052903   3.399025437286118]
%A=GenSymmPosDefWithEigs([1,2,3,4,5]) %COMMENTED OUT TO AVOID RANDOM MATRIX
disp(['***When acceptable error for both Inv Pow and Pow Methods is set to ',num2str(eps) ,' (eps AKA the floating point precision), we get:******']);
NM2Test2(A,-1,-1)



%% Check on random Matrix with Eigenvalues 1,2,....,9,10
disp('============================================================================================')
disp('||           TESTING: for RANDOM SymmPosDef MATRIX WITH EIGENVALUES [1,....,10]:          ||')
disp('============================================================================================')
%A=GenSymmPosDefWithEigs(1:10)
A=[3.185340	0.000000	-0.667368	0.016089	0.356049	-0.678403	0.465454	-0.039842	-0.231235	0.263961;	
0.000000	7.739320	0.000000	-0.883271	-0.033370	0.376390	0.210097	-0.054948	-0.723270	0.053836;	
-0.667368	0.000000	6.202887	-0.028913	-0.762115	1.399196	-0.486589	0.400824	0.591507	-0.474372;	
0.016089	-0.883271	-0.028913	3.101351	-0.016299	0.392851	0.111514	0.156975	-0.786693	0.192000;	
0.356049	-0.033370	-0.762115	-0.016299	6.286605	-0.456342	0.260997	-0.042547	-0.302180	0.296871;	
-0.678403	0.376390	1.399196	0.392851	-0.456342	6.410561	-0.720397	0.255945	1.478198	0.080752;	
0.465454	0.210097	-0.486589	0.111514	0.260997	-0.720397	5.248762	1.919165	0.070803	-1.723082;	
-0.039842	-0.054948	0.400824	0.156975	-0.042547	0.255945	1.919165	6.643244	0.428849	3.504578;	
-0.231235	-0.723270	0.591507	-0.786693	-0.302180	1.478198	0.070803	0.428849	3.942215	-0.676742;	
0.263961	0.053836	-0.474372	0.192000	0.296871	0.080752	-1.723082	3.504578	-0.676742	6.239716]	
%%%fprintf([repmat('%f\t', 1, size(A, 2)) '\n'], A');
disp(['***When acceptable error for both Inv Pow and Pow Methods is set to ',num2str(eps) ,' (eps AKA the floating point precision), we get:******']);
NM2Test2(A,-1,-1)

%% Check on random Matrix with Eigenvalues 1,2,....,9,10
disp('============================================================================================')
disp('||        TESTING: for RANDOM SymmPosDef MATRIX WITH EIGENVALUES [33,54,66,98,99]:        ||')
disp('============================================================================================')
A=GenSymmPosDefWithEigs([33,54,66,98,99]);
disp(['***When acceptable error for both Inv Pow and Pow Methods is set to ',num2str(eps) ,' (eps AKA the floating point precision), we get:******']);
NM2Test2(A,-1,-1)

%% Check against MATLAB Implementation Cond() using  FOR RANDOM SYMMETRIC POSITIVE MATRIX with random eigenvalues.
matrixSize = floor(rand()*10)+2; %selects number for matrix sizes from range 2 to 12 (for 2x2 to 10x10 matrices)
%A = rand(matrixSize); %only positive elements generated by rand.
%B = A * A.'; %Makes B a Symmetric-Positive_Definite Matrix.
B= GenSymmPosDefWithEigs(rand([1 matrixSize]));
disp('============================================================================================')
disp('||                     TESTING: FOR RANDOM SYMMETRIC POSITIVE MATRIX B:                   ||')
disp('============================================================================================')
B
disp('******USING MATLAB-implementation COND, condition value is:******')
MATLAB_Condition_Value=cond(B)
disp('******RESULT OF NM2Test2(B,-1,-1) is:******')
Condition_Value= NM2Test2(B,-1,-1) %-1,-1 sets acceptable error tolerance to eps (floating point error);




%% Function/algorithm for accurately generating SymmPosDef Matrices with given eigenvalues.
%The following sub-function was tested against analytical (not approximate or
%based on numerical methods) Eigenvalue finding tools such as Wolfram Alpha.
%for all the matrices generated by it in the main CheckNM2Test2 function.
    function A = GenSymmPosDefWithEigs(EIGVALS) 
        EIGVALS=abs(EIGVALS); %We need only positive Eigenvalues for positive-definite.
        
        n=size(EIGVALS,2); %Gives the number of elements in EIGVALS vector

        A=sprandsym(n,1:n,EIGVALS); %Gives a sparse Matrix that is symmetric
        %whose eigenvalues are the elements of EIGVALS.
        
        %Since at the beginning we use abs on EIGVALS to ensure they're all
        %positive, A is Positive definite on top of being Symmetric.
        
        %Hence, this Matrix matches our conditions.
        
        A=full(A); %Converts the above sparse matrix to full matrix
    end
end